<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Pony的博客]]></title>
  <subtitle><![CDATA[困在物理世界的数据中]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://qpanpony.github.io/"/>
  <updated>2015-05-08T14:11:57.834Z</updated>
  <id>http://qpanpony.github.io/</id>
  
  <author>
    <name><![CDATA[qpanpony]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Markdown使用小结]]></title>
    <link href="http://qpanpony.github.io/2015/05/08/Markdown-Style-Guide/"/>
    <id>http://qpanpony.github.io/2015/05/08/Markdown-Style-Guide/</id>
    <published>2015-05-08T14:11:57.834Z</published>
    <updated>2015-05-08T14:11:57.834Z</updated>
    <content type="html"><![CDATA[<p>转发一篇有关Markdown的使用小结。<br><a id="more"></a></p>
<p>This is a demo of all styled elements in Jekyll Now.<a href="https://raw.githubusercontent.com/barryclark/www.jekyllnow.com/gh-pages/_posts/2014-6-19-Markdown-Style-Guide.md" target="_blank" rel="external">View the markdown used to create this post</a>.</p>
<p>Mastering Markdown.<a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="external">Mastering Markdown</a>.</p>
<p>This is a paragraph, it’s surrounded by whitespace. Next up are some headers, they’re heavily influenced by GitHub’s markdown style.</p>
<h2 id="Header_2_(H1_is_reserved_for_post_titles)">Header 2 (H1 is reserved for post titles)</h2><h3 id="Header_3">Header 3</h3><h4 id="Header_4">Header 4</h4><p>A link to <a href="http://github.com/barryclark/jekyll-now/" target="_blank" rel="external">Jekyll Now</a>. A big ass literal link <a href="http://github.com/barryclark/jekyll-now/" target="_blank" rel="external">http://github.com/barryclark/jekyll-now/</a></p>
<p>An image, located within /images</p>
<p><img src="/images/bkdefault_avatar.png" alt="an image alt text" title="an image title"></p>
<ul>
<li>A bulletted list</li>
</ul>
<ul>
<li>alternative syntax 1</li>
</ul>
<ul>
<li>alternative syntax 2<ul>
<li>an indented list item</li>
</ul>
</li>
</ul>
<ol>
<li>An</li>
<li>ordered</li>
<li>list</li>
</ol>
<p>Inline markup styles:</p>
<ul>
<li><em>italics</em></li>
<li><strong>bold</strong></li>
<li><code>code()</code></li>
</ul>
<blockquote>
<p>Blockquote</p>
<blockquote>
<p>Nested Blockquote</p>
</blockquote>
</blockquote>
<p>Syntax highlighting can be used with triple backticks, like so:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Some pointless Javascript */</span></span><br><span class="line"><span class="keyword">var</span> rawr = [<span class="string">"r"</span>, <span class="string">"a"</span>, <span class="string">"w"</span>, <span class="string">"r"</span>];</span><br></pre></td></tr></table></figure>
<p>Use two trailing spaces<br>on the right<br>to create linebreak tags  </p>
<p>Finally, horizontal lines</p>
<hr>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>转发一篇有关Markdown的使用小结。<br>]]>
    
    </summary>
    
      <category term="git" scheme="http://qpanpony.github.io/tags/git/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git使用总结（转发自idhyt's blog）]]></title>
    <link href="http://qpanpony.github.io/2015/05/08/git-conclusion/"/>
    <id>http://qpanpony.github.io/2015/05/08/git-conclusion/</id>
    <published>2015-05-08T09:32:48.754Z</published>
    <updated>2015-05-08T09:32:48.754Z</updated>
    <content type="html"><![CDATA[<p>windows下git使用总结<br><a id="more"></a></p>
<h3 id="初始化配置Github">初始化配置Github</h3><ol>
<li><p>下载msysgit并安装 : <a href="http://msysgit.github.io/" target="_blank" rel="external">http://msysgit.github.io/</a></p>
</li>
<li><p>github上创建一个项目，如SmartScript</p>
</li>
<li><p>初始化<br> 新建Github目录并进入：</p>
<pre><code><span class="keyword">cd</span> <span class="keyword">d</span>:\\work\\Github
git init
git config --<span class="keyword">global</span> user.name <span class="string">"usernme"</span> 
git config --<span class="keyword">global</span> user.email  <span class="string">"emailName"</span>
</code></pre><p> （username：GitHub的用户名）（emailName：GitHub的注册邮箱）</p>
</li>
<li><p>安装ssh<br> 4.1 检查SSH公钥 : </p>
<pre><code><span class="built_in">cd</span> ~/.ssh
</code></pre><p> 看看存不存在.ssh</p>
<p> 4.2 生成SSH公钥 : </p>
<pre><code>ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span>
<span class="comment"># Creates a new ssh key using the provided email Generating public/private rsa key pair.</span>
Enter <span class="built_in">file</span> <span class="operator">in</span> which <span class="built_in">to</span> save <span class="operator">the</span> key (/user/you/.ssh/id_rsa):
</code></pre><p> 现在你可以看到，在自己的目录下，有一个.ssh目录，说明成功了</p>
<p> 4.3 输入github密码</p>
<pre><code>Enter passphrase (<span class="keyword">empty</span> <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> a passphrase]
Enter same passphrase again: [<span class="keyword">Type</span> passphrase again]
</code></pre><p> 这个时候输入你在github密码，然后在.ssh中可以看到</p>
<pre><code>Your identification has been saved <span class="keyword">in</span> <span class="regexp">/home/</span>you<span class="regexp">/.ssh/</span>id_rsa.
# Your <span class="keyword">public</span> key has been saved <span class="keyword">in</span> <span class="regexp">/home/</span>you<span class="regexp">/.ssh/</span>id_rsa.pub.
</code></pre><p> 4.4 添加SSH公钥到github<br> 打开github，找到账户里面添加SSH，把idrsa.pub内容复制到key里面。</p>
<p> 4.5 测试是否生效<br> 使用命令： </p>
<pre><code><span class="title">ssh</span> -T git<span class="variable">@github</span>.com
</code></pre><p> 当你看到这些内容放入时候，直接yes</p>
<pre><code>The authenticity <span class="keyword">of</span> host <span class="comment">'github.com (207.97.227.239)' can't be established.</span>
RSA <span class="keyword">key</span> fingerprint <span class="keyword">is</span> <span class="number">16</span>:<span class="number">27</span>:ac:a5:<span class="number">76</span>:<span class="number">28</span>:<span class="number">2</span>d:<span class="number">36</span>:<span class="number">63</span>:<span class="number">1</span>b:<span class="number">56</span>:<span class="number">4</span>d:eb:df:a6:<span class="number">48.</span>
Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)?
</code></pre><p> 看到这个内容放入时候，说明就成功了。<br> <img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-1.png" alt="tool-editor"></p>
</li>
<li><p>使用git add filename 将项目文件添加到库（如 git add “readme.txt”），也可以多文件夹设置，如在Github目录下创建文件夹Python并拷贝项目到该目录，然后CD 进入执行命令</p>
</li>
<li><p>使用git commit -m “first commit” 进行提交（”first commit” 相当于一个描述）</p>
</li>
<li><p>使用远程连接：</p>
<pre><code>git remote add origin git@github<span class="class">.com</span>:username/SmartScript<span class="class">.git</span> 
</code></pre><p>（username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
</li>
<li><p>输入命令“git push origin master”将源码推送到GitHub</p>
</li>
<li><p>在GitHub上仓库页面刷新即可看到你在本地创建并提交的文件</p>
</li>
</ol>
<h3 id="删除Github上的文件(如_del-txt)">删除Github上的文件(如 del.txt)</h3><ol>
<li>进入到对应的目录下 cd: D:\work\Github\SmartScript</li>
<li>git rm —cached ”del.txt”</li>
<li>git commit -m “del”</li>
<li>git push origin master (失败先 git pull)<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-2.png" alt="tool-editor"></li>
<li>另外，使用 git rm 命令即可，有两种选择,<br> 一种是 git rm —cached “文件路径”，不删除物理文件，仅将该文件从缓存中删除；<br> 一种是 git rm —f “文件路径”，不仅将该文件从缓存中删除，还会将物理文件删除（不会回收到垃圾桶）。<br> 如果删除文件夹，需要加-r参数<br> 如： git rm —f -r “文件夹名”</li>
</ol>
<h3 id="克隆一个项目下来">克隆一个项目下来</h3><pre><code>git clone git<span class="annotation">@github</span>.<span class="string">com:</span>username/Hello.git
</code></pre><p>（username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
<h3 id="忽略文件-gitignore">忽略文件.gitignore</h3><ol>
<li>进入要忽略的目录创建文件<br>touch  .gitignore     #创建gitignore隱藏文件</li>
<li>vim .gitignore     #编辑文件，加入指定文件 </li>
<li>git add . #就可以自动忽略掉指定的文件</li>
<li>文件.gitignore的格式规范：<br>A：#为注释<br>B：可以使用shell所使用的正则表达式来进行模式匹配<br>C：匹配模式最后跟”/“说明要忽略的是目录<br>D：使用！取反（例如目录中包含  test.a，并且gitignore文件中包含  <em>.[oa]，如果在文件中加入 ！test.a   表明忽略除test.a文件以外的后缀名为.a或者.o的文件）<br>tmp.txt         //忽略tmp.txt
</em>.log           //忽略所有log文件<br>tmp/<em>           //忽略tmp文件夹所有文件<br>log/**/</em>.log    //忽略log目录下的包括子目录下的所有log文件<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下面是我的gitignore文件的内容 </span></span><br><span class="line"><span class="comment">#忽略gitignore文件 </span></span><br><span class="line">.gitignore</span><br><span class="line"><span class="comment">#忽略后缀名为.o和.a的文件 </span></span><br><span class="line"><span class="keyword">*</span>.[oa]</span><br><span class="line"><span class="comment">#忽略后缀名为.exe和.txt的文件 </span></span><br><span class="line"><span class="keyword">*</span>.exe</span><br><span class="line"><span class="keyword">*</span>.txt</span><br><span class="line"><span class="comment">#显示指定忽略名称为main的文件 </span></span><br><span class="line">main</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg:c++ .gitignore</span></span><br><span class="line"><span class="keyword">*</span>.sdf</span><br><span class="line">.gitignore</span><br><span class="line">Debug/<span class="keyword">*</span></span><br><span class="line">Release/<span class="keyword">*</span></span><br><span class="line">ipch/<span class="keyword">*</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="更新远程仓库代码到本地">更新远程仓库代码到本地</h3><ol>
<li>查看远程仓库<br> git remote -v</li>
<li>从远程获取最新版本到本地<br> git fetch origin master</li>
<li>比较本地的仓库和远程参考的区别 （作参考，可不用执行该步）<br> git log -p master..  origin/master</li>
<li>远程代码下载下来合并到本地仓库<br> git merge origin/master</li>
<li>git add –p (patch模式)<br> eg: 修改了a,b,c文件<br> git add -p    //列出所有更改<br> y/a 应用<br> git commit -m “..”<br> …</li>
</ol>
<h3 id="关于可能出现的错误">关于可能出现的错误</h3><ol>
<li><p>在执行</p>
<pre><code><span class="variable">$ </span>git remote addorigin git<span class="variable">@github</span>.<span class="symbol">com:</span>defnngj/hello-world.git
</code></pre><p> 错误提示：fatal: remote origin already exists.<br> 解决办法：</p>
<pre><code><span class="variable">$ </span>git remote rm origin
</code></pre><p> 然后在执行：$ git remote add origin git@github.com:defnngj/hello-world.git 就不会报错误了</p>
</li>
<li><p>在执行</p>
<pre><code>$ git <span class="keyword">push</span> origin master
</code></pre><p> 错误提示：error:failed to push som refs to…….<br> 解决办法：</p>
<pre><code>$ git pull origin master <span class="comment">// 先把远程服务器github上面的文件拉下来，再push 上去。</span>
</code></pre></li>
<li><p>遇到的问题:<br> update were rejected because the tip of your current branch is behind ….<br> 原因是远程的的代码库比我本地的代码库要新。<br> 所以需要在远程代码库pull一次下来。<br> 再修改代码。再push。</p>
</li>
<li><p>遇到遇到的问题:<br> change not staged for commit<br> 通过add 和 checkout解决不了</p>
<pre><code>git <span class="keyword">rm</span> --cached &lt;<span class="keyword">file</span>&gt; (git <span class="keyword">rm</span> --cached <span class="keyword">test</span>)
git add <span class="keyword">file</span> (git add <span class="keyword">test</span>/)
</code></pre></li>
</ol>
<h3 id="git命令速查表">git命令速查表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-4.png" alt="tool-editor"></p>
<h3 id="git详细命令表">git详细命令表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-5.png" alt="tool-editor"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>windows下git使用总结<br>]]>
    
    </summary>
    
      <category term="git" scheme="http://qpanpony.github.io/tags/git/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo Hello World]]></title>
    <link href="http://qpanpony.github.io/2015/05/08/hello-world/"/>
    <id>http://qpanpony.github.io/2015/05/08/hello-world/</id>
    <published>2015-05-08T09:32:20.154Z</published>
    <updated>2015-05-08T09:32:20.154Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://qpanpony.github.io/tags/Hexo/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
</feed>