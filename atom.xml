<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Pony的博客]]></title>
  <subtitle><![CDATA[困在物理世界的数据中]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://qpanpony.github.io/"/>
  <updated>2015-07-21T04:28:07.596Z</updated>
  <id>http://qpanpony.github.io/</id>
  
  <author>
    <name><![CDATA[qpanpony]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[相机的选择]]></title>
    <link href="http://qpanpony.github.io/2015/07/21/CameraSelection/"/>
    <id>http://qpanpony.github.io/2015/07/21/CameraSelection/</id>
    <published>2015-07-21T01:46:59.000Z</published>
    <updated>2015-07-21T04:28:07.596Z</updated>
    <content type="html"><![CDATA[<p>这些天在考虑一个前端图像采集系统的方案，涉及到相机和镜头的选型，一些步骤和参数计算整理如下。<a id="more"></a></p>
<ol>
<li>选择相机的类型：<blockquote>
<ul>
<li>CCD 或 CMOS</li>
<li>面阵 或 线阵</li>
</ul>
</blockquote>
</li>
<li>选择图像分辨率和帧率；<blockquote>
<ul>
<li>图像分辨率举例：2456 $\times$ 2058</li>
<li>帧率举例：15 fps</li>
</ul>
</blockquote>
</li>
<li>选择相机传感器尺寸和像素尺寸：<blockquote>
<ul>
<li>面阵传感器尺寸举例：2/3”</li>
<li>像素尺寸举例：3.45 $\mu$m $\times$ 3.45 $\mu$m</li>
<li>常用面阵传感器尺寸</li>
</ul>
</blockquote>
</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th>1英寸</th>
<th>2/3英寸</th>
<th>1/2英寸</th>
<th>1/3英寸</th>
<th>1/4英寸</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">对角线 <br> (mm)</td>
<td>16</td>
<td>11</td>
<td>8</td>
<td>6</td>
<td>4</td>
</tr>
<tr>
<td style="text-align:left">幅面尺寸 <br> (mm)</td>
<td>12.8 $\times$ 9.6</td>
<td>8.8 $\times$ 6.6</td>
<td>6.4 $\times$ 4.8</td>
<td>4.8 $\times$ 3.6</td>
<td>3.6 $\times$ 2.7</td>
</tr>
</tbody>
</table>
<ol>
<li><p>选择镜头：</p>
<blockquote>
<ul>
<li>镜头焦距，与物距和放大倍率相关（计算公式见后）</li>
</ul>
</blockquote>
</li>
<li><p>计算系统放大倍率：</p>
<ul>
<li>$$\beta = \frac{传感器尺寸最小边}{对应的拍摄区域尺寸最小边} $$</li>
<li>举例：$$\beta = \frac{6.6 mm}{15 m} = 4.4 \times 10^{-4} $$</li>
<li>根据图像分辨率和像素尺寸可计算出传感器实际像面尺寸（可能与手册给出的传感器尺寸不一致），如 2058 $\times$ 3.45 $\mu$m $\approx$ 7.1mm</li>
</ul>
</li>
<li><p>计算可分辨的景物精度：</p>
<ul>
<li>$$\frac{传感器像素尺寸}{系统放大倍率} $$</li>
<li>举例： $$\frac{ 3.45 \times 10^{-6}}{\beta} = \frac{ 3.45 \times 10^{-6}}{4.4 \times 10^{-4}} \approx 0.78 \times 10^{-2}m $$</li>
</ul>
</li>
<li><p>如给定焦距f = 8mm，可计算所需的物距是：</p>
<ul>
<li>举例：$$L=f(1+\frac{1}{\beta})=8 \times 10^{-3} \times (1 + \frac{1}{4.4 \times 10^{-4}}) \approx 18.2m $$</li>
</ul>
</li>
<li><p>如给定物距L = 15m，可计算所需的焦距是：</p>
<ul>
<li>举例：$$ f = \frac{L}{1+\frac{1}{\beta}}=\frac{15 \times 10^{3}}{1+\frac{1}{4.4 \times 10^{-4}}} = 6.6 mm $$</li>
</ul>
</li>
<li><p>计算相机的景深：</p>
<ul>
<li>后景深度或远景深度为：$$\Delta_{1} = \frac{F L^{2} \delta}{f^{2}-F L \delta} $$</li>
<li>前景深度或近景深度为：$$\Delta_{2} = \frac{F L^{2} \delta}{f^{2}+F L \delta} $$</li>
<li>其中，F为镜头拍摄的光圈值；f为镜头焦距；L为对焦距离；$\delta$为容许弥散圆直径，其最小值为像素单元尺寸；</li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>这些天在考虑一个前端图像采集系统的方案，涉及到相机和镜头的选型，一些步骤和参数计算整理如下。]]>
    
    </summary>
    
      <category term="Camera" scheme="http://qpanpony.github.io/tags/Camera/"/>
    
      <category term="Sensing" scheme="http://qpanpony.github.io/tags/Sensing/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hadoop的生态系统]]></title>
    <link href="http://qpanpony.github.io/2015/06/09/hadoopEcosys/"/>
    <id>http://qpanpony.github.io/2015/06/09/hadoopEcosys/</id>
    <published>2015-06-09T02:25:52.000Z</published>
    <updated>2015-06-09T03:13:29.273Z</updated>
    <content type="html"><![CDATA[<p>Hadoop的生态系统一览表，摘录自“Field Guide to Hadoop”。<a id="more"></a></p>
<table>
<thead>
<tr>
<th style="text-align:left">类别</th>
<th style="text-align:left">系统</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Core Technologies</td>
<td style="text-align:left">HDFS <br> MapReduce <br> YARN <br> Spark</td>
</tr>
<tr>
<td style="text-align:left">Database and Data Management</td>
<td style="text-align:left">Cassandra <br> HBase <br> Accumulo <br> Blur <br> Solr <br> MongoDB <br> Hive <br> Spark SQL <br> Giraph</td>
</tr>
<tr>
<td style="text-align:left">Serialization</td>
<td style="text-align:left">Avro <br> JSON <br> Protocol Buffers <br> Parquet</td>
</tr>
<tr>
<td style="text-align:left">Management and Monitoring</td>
<td style="text-align:left">Ambari <br> HCatalog <br> Nagios <br> Puppet <br> Chef <br> ZooKeeper <br> Ganglia</td>
</tr>
<tr>
<td style="text-align:left">Analytic Helpers</td>
<td style="text-align:left">Pig <br> Hadoop Streaming <br> Mahout <br> MLLib <br> Hadoop Image Processing Interface (HIPI) <br> SpatialHadoop</td>
</tr>
<tr>
<td style="text-align:left">Data Transfer</td>
<td style="text-align:left">Sqoop <br> Flume <br> DistCp <br> Storm</td>
</tr>
<tr>
<td style="text-align:left">Security, Access Control and Auditing</td>
<td style="text-align:left">Sentry <br> Kerberos <br> Knox</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hadoop的生态系统一览表，摘录自“Field Guide to Hadoop”。]]>
    
    </summary>
    
      <category term="Data Science" scheme="http://qpanpony.github.io/tags/Data-Science/"/>
    
      <category term="hadoop" scheme="http://qpanpony.github.io/tags/hadoop/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spark与Hadoop mapreduce比较（摘录）]]></title>
    <link href="http://qpanpony.github.io/2015/05/31/Spark-Mapreduce/"/>
    <id>http://qpanpony.github.io/2015/05/31/Spark-Mapreduce/</id>
    <published>2015-05-30T16:00:00.000Z</published>
    <updated>2015-06-06T21:44:16.095Z</updated>
    <content type="html"><![CDATA[<p>摘录近期在<a href="http://www.zhihu.com/question/26568496/answer/41608400" target="_blank" rel="external">知乎</a>上看到的有关spark与Hadoop mapreduce的比较，备忘~~ <a id="more"></a></p>
<hr>
<table>
<thead>
<tr>
<th>Spark</th>
<th>Hadoop Mapreduce</th>
</tr>
</thead>
<tbody>
<tr>
<td>基于RDD的抽象，实数据处理逻辑的代码非常简短。</td>
<td>抽象层次低，需要手工编写代码来完成，使用上难以上手。</td>
</tr>
<tr>
<td>提供很多转换和动作，很多基本操作如Join，GroupBy已经在RDD转换和动作中实现。</td>
<td>只提供两个操作，Map和Reduce，表达力欠缺。</td>
</tr>
<tr>
<td>一个Job可以包含RDD的多个转换操作，在调度时可以生成多个阶段（Stage），而且如果多个map操作的RDD的分区不变，是可以放在同一个Task中进行。</td>
<td>一个Job只有Map和Reduce两个阶段（Phase），复杂的计算需要大量的Job完成，Job之间的依赖关系是由开发者自己管理的。</td>
</tr>
<tr>
<td>在Scala中，通过匿名函数和高阶函数，RDD的转换支持流式API，可以提供处理逻辑的整体视图。代码不包含具体操作的实现细节，逻辑更清晰。</td>
<td>处理逻辑隐藏在代码细节中，没有整体逻辑。</td>
</tr>
<tr>
<td>中间结果放在内存中，内存放不下了会写入本地磁盘，而不是HDFS。</td>
<td>中间结果也放在HDFS文件系统中。</td>
</tr>
<tr>
<td>分区相同的转换构成流水线放在一个Task中运行，分区不同的转换需要Shuffle，被划分到不同的Stage中，需要等待前面的Stage完成后才可以开始。</td>
<td>ReduceTask需要等待所有MapTask都完成后才可以开始。</td>
</tr>
<tr>
<td>通过将流拆成小的batch提供Discretized Stream处理流数据。</td>
<td>时延高，只适用Batch数据处理，对于交互式数据处理，实时数据处理的支持不够。</td>
</tr>
<tr>
<td>通过在内存中缓存数据，提高迭代式计算的性能。</td>
<td>对于迭代式数据处理性能比较差。</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<p>摘录近期在<a href="http://www.zhihu.com/question/26568496/answer/41608400">知乎</a>上看到的有关spark与Hadoop mapreduce的比较，备忘~~]]>
    
    </summary>
    
      <category term="mapreduce" scheme="http://qpanpony.github.io/tags/mapreduce/"/>
    
      <category term="spark" scheme="http://qpanpony.github.io/tags/spark/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[欢迎使用 Cmd Markdown 编辑阅读器（转载）]]></title>
    <link href="http://qpanpony.github.io/2015/05/12/CmdMarkdown/"/>
    <id>http://qpanpony.github.io/2015/05/12/CmdMarkdown/</id>
    <published>2015-05-12T01:41:33.000Z</published>
    <updated>2015-05-12T02:43:11.377Z</updated>
    <content type="html"><![CDATA[<p>部分转载一篇名为 <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">欢迎使用Cmd Markdown编辑阅读器</a>的文章，觉得当作Markdown文档的范例挺好的，当然也可以尝试WYSIWYG的在线编辑器。<a id="more"></a></p>
<hr>
<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p>
<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>
<h3 id="Windows/Mac/Linux_全平台客户端"><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">Windows/Mac/Linux 全平台客户端</a></h3><h3 id="什么是_Markdown">什么是 Markdown</h3><p>Markdown是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="书写一个质能守恒公式_[^LaTeX]">书写一个质能守恒公式 [^LaTeX]</h3><p>$$E=mc^2$$</p>
<h3 id="高亮一段代码_[^code]">高亮一段代码 [^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="decorator">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure>
<h3 id="高效绘制_流程图">高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="external">流程图</a></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st=&#62;start: Start&#10;op=&#62;operation: Your Operation&#10;cond=&#62;condition: Yes or No?&#10;e=&#62;end&#10;&#10;st-&#62;op-&#62;cond&#10;cond(yes)-&#62;e&#10;cond(no)-&#62;op</span><br></pre></td></tr></table></figure>
<h3 id="高效绘制_序列图">高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="external">序列图</a></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alice-&#62;Bob: Hello Bob, how are you?&#10;Note right of Bob: Bob thinks&#10;Bob--&#62;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<h3 id="绘制表格">绘制表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="更详细语法说明">更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="external">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="external">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>
<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>
<hr>
<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax</a> 参考更多使用方法。</p>
<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>部分转载一篇名为 <a href="https://www.zybuluo.com/mdeditor">欢迎使用Cmd Markdown编辑阅读器</a>的文章，觉得当作Markdown文档的范例挺好的，当然也可以尝试WYSIWYG的在线编辑器。]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://qpanpony.github.io/tags/Markdown/"/>
    
      <category term="git" scheme="http://qpanpony.github.io/tags/git/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[物联网的美文]]></title>
    <link href="http://qpanpony.github.io/2015/05/11/IoT/"/>
    <id>http://qpanpony.github.io/2015/05/11/IoT/</id>
    <published>2015-05-11T08:48:44.000Z</published>
    <updated>2015-05-11T09:03:04.306Z</updated>
    <content type="html"><![CDATA[<p>今天读到一篇有关物联网的论文，文笔写得真美，结构也美，Ha…ha。</p>
<blockquote>
<p>物联网并非单一的技术逻辑的产物，我们可以将它理解为人与物的深度对话机制和双向的信息翻译机制，有效解决了自然主体之间信息传播的虚拟间性难题。物联化进程在当代己经成为人类更为直接的历史实践主题和更加自觉的社会发展选择，通过信息论的视角来诊释物联网的内在机理，通过媒介观的变革来解读物联网的演进规律，通过形而上的思考来剖析物联网的认知逻辑，将自然界与人类社会在物联网视域中的现实交往关系奠基于更深刻的理论基点之上，是科学的人文性和技术的社会性必然要面临的重要命题，具有很好的社会历史价值和现实意义。<br><a id="more"></a></p>
<blockquote>
<p>1.1 研究问题缘起<br>1.1.1 开篇:国际电联ITU的科学预见<br>1.1.2 呈现:“维基罗马”的“未来地图”<br>1.1.3 展望:梅特卡夫定律与智慧地球愿景<br>1.2 研究背景剖析<br>1.2.1 “物”的观念性缺席:交互现象的传统认知<br>1.2.2 “物”的技术性呈现:交互主体的形象转变<br>1.2.3 “物”的能动性回归:交互实践的现实基础<br>1.3 研究意义探寻<br>1.3.1 物体与技术的交互:主体地位的功能彰显<br>1.3.2 物体与个人的交互:私人领域的纵深理解<br>1.3.3 物体与社会的交互:公共空间的价值重构</p>
</blockquote>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天读到一篇有关物联网的论文，文笔写得真美，结构也美，Ha…ha。</p>
<blockquote>
<p>物联网并非单一的技术逻辑的产物，我们可以将它理解为人与物的深度对话机制和双向的信息翻译机制，有效解决了自然主体之间信息传播的虚拟间性难题。物联化进程在当代己经成为人类更为直接的历史实践主题和更加自觉的社会发展选择，通过信息论的视角来诊释物联网的内在机理，通过媒介观的变革来解读物联网的演进规律，通过形而上的思考来剖析物联网的认知逻辑，将自然界与人类社会在物联网视域中的现实交往关系奠基于更深刻的理论基点之上，是科学的人文性和技术的社会性必然要面临的重要命题，具有很好的社会历史价值和现实意义。<br>]]>
    
    </summary>
    
      <category term="IoT" scheme="http://qpanpony.github.io/tags/IoT/"/>
    
      <category term="脑洞大开" scheme="http://qpanpony.github.io/categories/%E8%84%91%E6%B4%9E%E5%A4%A7%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[谈谈SIoT: Social Internet of Things]]></title>
    <link href="http://qpanpony.github.io/2015/05/11/SIoT/"/>
    <id>http://qpanpony.github.io/2015/05/11/SIoT/</id>
    <published>2015-05-11T05:58:31.000Z</published>
    <updated>2015-05-11T08:23:38.060Z</updated>
    <content type="html"><![CDATA[<p>Social IoT: Social Internet of Things这个词，我能查到的，应该是Luigi Atzori等人在IEEE Communications Letters发表的名为“SIoT：Giving a social structure to the internet of things, 2011”的论文中正式出现的。此后，University of Cagliari的这个研究组陆续在Computer Networks(The Social Internet of things (SIoT)-when social networks meet the internet of things: Concept, architecture and network characterization, 2012)、IEEE Communication Magazine (From “smart Objects” to “social objects”: The next evolutionary step of the internet of thngs, 2014)发表多篇有关SIoT的论文。从字面上理解，SIoT就是要探讨将社会关系网络纳入物联网的技术潜力，中文上，我觉得“社会物联网络”是一个合适的中文词。<br><a id="more"></a></p>
<p>人类有哪些基本关系类型？Fiske在综合人类学、社会心理学和社会学的研究及理论基础上，提出了目前被广泛接受的4种人类基本关系类型，即：</p>
<ul>
<li><p>公共共享(Communal sharing)</p>
</li>
<li><p>等级排序(Authority ranking)</p>
</li>
<li><p>平等匹配(Equality matching)</p>
</li>
<li><p>市场定价(Market pricing)</p>
</li>
</ul>
<p>不明白？确实，现在把人类的这些基本关系类型直接引入到物物对象之间是还有些远。</p>
<p>那说说Luigiz Atzori定义的相对具体的对象间关系类型：</p>
<ul>
<li><p>POR: Parental object relationship</p>
</li>
<li><p>C-LOR:Co-location object relationship</p>
</li>
<li><p>C-WOR: Co-work object relationship</p>
</li>
<li><p>OOR: Ownership object relationship</p>
</li>
<li><p>SOR: Social object relationship</p>
</li>
</ul>
<p>有关对象间关系类型，之前（好吧，其实是一年半前…）我琢磨过一段时间，把它进行重新整理成以下社会物联网络群组关系类型：</p>
<ul>
<li>本征关系<ul>
<li>基于生产制造者的关系(PR: Parental Relationship)</li>
<li>基于所有者的关系(OR: Ownership Relationship)</li>
</ul>
</li>
<li>非本征关系<ul>
<li>基于动态物理位置的关系(LR: Location Relationship)</li>
<li>基于任务的关系(TR: Task Relationship)</li>
<li>基于事件的关系(ER: Event Relationship)</li>
<li>基于特征指标的关系(MR: Metrics Relationship)</li>
<li>基于用户/服务对象的关系(UR: User Relationship)</li>
</ul>
</li>
</ul>
<p>本来在此基础上整理一份有关社会物联网络关系群组建立方法的专利，可惜公司内部评审的专家给了差评，好吧，you can you up, no can no BB!</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Social IoT: Social Internet of Things这个词，我能查到的，应该是Luigi Atzori等人在IEEE Communications Letters发表的名为“SIoT：Giving a social structure to the internet of things, 2011”的论文中正式出现的。此后，University of Cagliari的这个研究组陆续在Computer Networks(The Social Internet of things (SIoT)-when social networks meet the internet of things: Concept, architecture and network characterization, 2012)、IEEE Communication Magazine (From “smart Objects” to “social objects”: The next evolutionary step of the internet of thngs, 2014)发表多篇有关SIoT的论文。从字面上理解，SIoT就是要探讨将社会关系网络纳入物联网的技术潜力，中文上，我觉得“社会物联网络”是一个合适的中文词。<br>]]>
    
    </summary>
    
      <category term="SIoT" scheme="http://qpanpony.github.io/tags/SIoT/"/>
    
      <category term="闭眼瞎评" scheme="http://qpanpony.github.io/categories/%E9%97%AD%E7%9C%BC%E7%9E%8E%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown使用小结]]></title>
    <link href="http://qpanpony.github.io/2015/05/08/Markdown-Style-Guide/"/>
    <id>http://qpanpony.github.io/2015/05/08/Markdown-Style-Guide/</id>
    <published>2015-05-07T16:00:00.000Z</published>
    <updated>2015-05-12T02:14:20.414Z</updated>
    <content type="html"><![CDATA[<p>转发一篇有关Markdown的使用小结。<br><a id="more"></a></p>
<p>This is a demo of all styled elements in Jekyll Now.<a href="https://raw.githubusercontent.com/barryclark/www.jekyllnow.com/gh-pages/_posts/2014-6-19-Markdown-Style-Guide.md" target="_blank" rel="external">View the markdown used to create this post</a>.</p>
<p>Mastering Markdown.<a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="external">Mastering Markdown</a>.</p>
<p>This is a paragraph, it’s surrounded by whitespace. Next up are some headers, they’re heavily influenced by GitHub’s markdown style.</p>
<h2 id="Header_2_(H1_is_reserved_for_post_titles)">Header 2 (H1 is reserved for post titles)</h2><h3 id="Header_3">Header 3</h3><h4 id="Header_4">Header 4</h4><p>A link to <a href="http://github.com/barryclark/jekyll-now/" target="_blank" rel="external">Jekyll Now</a>. A big ass literal link <a href="http://github.com/barryclark/jekyll-now/" target="_blank" rel="external">http://github.com/barryclark/jekyll-now/</a></p>
<p>An image, located within /images</p>
<p><img src="http://qpanpony.github.io/images/bkdefault_avatar.jpg" alt="an image alt text" title="an image title"></p>
<ul>
<li>A bulletted list</li>
</ul>
<ul>
<li>alternative syntax 1</li>
</ul>
<ul>
<li>alternative syntax 2<ul>
<li>an indented list item</li>
</ul>
</li>
</ul>
<ol>
<li>An</li>
<li>ordered</li>
<li>list</li>
</ol>
<p>Inline markup styles:</p>
<ul>
<li><em>italics</em></li>
<li><strong>bold</strong></li>
<li><code>code()</code></li>
</ul>
<blockquote>
<p>Blockquote</p>
<blockquote>
<p>Nested Blockquote</p>
</blockquote>
</blockquote>
<p>Syntax highlighting can be used with triple backticks, like so:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Some pointless Javascript */</span></span><br><span class="line"><span class="keyword">var</span> rawr = [<span class="string">"r"</span>, <span class="string">"a"</span>, <span class="string">"w"</span>, <span class="string">"r"</span>];</span><br></pre></td></tr></table></figure>
<p>Use two trailing spaces<br>on the right<br>to create linebreak tags  </p>
<p>Finally, horizontal lines</p>
<hr>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>转发一篇有关Markdown的使用小结。<br>]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://qpanpony.github.io/tags/Markdown/"/>
    
      <category term="git" scheme="http://qpanpony.github.io/tags/git/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git使用总结（转发自idhyt's blog）]]></title>
    <link href="http://qpanpony.github.io/2015/05/06/git-conclusion/"/>
    <id>http://qpanpony.github.io/2015/05/06/git-conclusion/</id>
    <published>2015-05-05T16:00:00.000Z</published>
    <updated>2015-05-11T02:44:06.166Z</updated>
    <content type="html"><![CDATA[<p>windows下git使用总结<br><a id="more"></a></p>
<h3 id="初始化配置Github">初始化配置Github</h3><ol>
<li><p>下载msysgit并安装 : <a href="http://msysgit.github.io/" target="_blank" rel="external">http://msysgit.github.io/</a></p>
</li>
<li><p>github上创建一个项目，如SmartScript</p>
</li>
<li><p>初始化<br> 新建Github目录并进入：</p>
<pre><code><span class="keyword">cd</span> <span class="keyword">d</span>:\\work\\Github
git init
git config --<span class="keyword">global</span> user.name <span class="string">"usernme"</span> 
git config --<span class="keyword">global</span> user.email  <span class="string">"emailName"</span>
</code></pre><p> （username：GitHub的用户名）（emailName：GitHub的注册邮箱）</p>
</li>
<li><p>安装ssh<br> 4.1 检查SSH公钥 : </p>
<pre><code><span class="built_in">cd</span> ~/.ssh
</code></pre><p> 看看存不存在.ssh</p>
<p> 4.2 生成SSH公钥 : </p>
<pre><code>ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span>
<span class="comment"># Creates a new ssh key using the provided email Generating public/private rsa key pair.</span>
Enter <span class="built_in">file</span> <span class="operator">in</span> which <span class="built_in">to</span> save <span class="operator">the</span> key (/user/you/.ssh/id_rsa):
</code></pre><p> 现在你可以看到，在自己的目录下，有一个.ssh目录，说明成功了</p>
<p> 4.3 输入github密码</p>
<pre><code>Enter passphrase (<span class="keyword">empty</span> <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> a passphrase]
Enter same passphrase again: [<span class="keyword">Type</span> passphrase again]
</code></pre><p> 这个时候输入你在github密码，然后在.ssh中可以看到</p>
<pre><code>Your identification has been saved <span class="keyword">in</span> <span class="regexp">/home/</span>you<span class="regexp">/.ssh/</span>id_rsa.
# Your <span class="keyword">public</span> key has been saved <span class="keyword">in</span> <span class="regexp">/home/</span>you<span class="regexp">/.ssh/</span>id_rsa.pub.
</code></pre><p> 4.4 添加SSH公钥到github<br> 打开github，找到账户里面添加SSH，把idrsa.pub内容复制到key里面。</p>
<p> 4.5 测试是否生效<br> 使用命令： </p>
<pre><code><span class="title">ssh</span> -T git<span class="variable">@github</span>.com
</code></pre><p> 当你看到这些内容放入时候，直接yes</p>
<pre><code>The authenticity <span class="keyword">of</span> host <span class="comment">'github.com (207.97.227.239)' can't be established.</span>
RSA <span class="keyword">key</span> fingerprint <span class="keyword">is</span> <span class="number">16</span>:<span class="number">27</span>:ac:a5:<span class="number">76</span>:<span class="number">28</span>:<span class="number">2</span>d:<span class="number">36</span>:<span class="number">63</span>:<span class="number">1</span>b:<span class="number">56</span>:<span class="number">4</span>d:eb:df:a6:<span class="number">48.</span>
Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)?
</code></pre><p> 看到这个内容放入时候，说明就成功了。<br> <img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-1.png" alt="tool-editor"></p>
</li>
<li><p>使用git add filename 将项目文件添加到库（如 git add “readme.txt”），也可以多文件夹设置，如在Github目录下创建文件夹Python并拷贝项目到该目录，然后CD 进入执行命令</p>
</li>
<li><p>使用git commit -m “first commit” 进行提交（”first commit” 相当于一个描述）</p>
</li>
<li><p>使用远程连接：</p>
<pre><code>git remote add origin git@github<span class="class">.com</span>:username/SmartScript<span class="class">.git</span> 
</code></pre><p>（username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
</li>
<li><p>输入命令“git push origin master”将源码推送到GitHub</p>
</li>
<li><p>在GitHub上仓库页面刷新即可看到你在本地创建并提交的文件</p>
</li>
</ol>
<h3 id="删除Github上的文件(如_del-txt)">删除Github上的文件(如 del.txt)</h3><ol>
<li>进入到对应的目录下 cd: D:\work\Github\SmartScript</li>
<li>git rm —cached ”del.txt”</li>
<li>git commit -m “del”</li>
<li>git push origin master (失败先 git pull)<br><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-2.png" alt="tool-editor"></li>
<li>另外，使用 git rm 命令即可，有两种选择,<br> 一种是 git rm —cached “文件路径”，不删除物理文件，仅将该文件从缓存中删除；<br> 一种是 git rm —f “文件路径”，不仅将该文件从缓存中删除，还会将物理文件删除（不会回收到垃圾桶）。<br> 如果删除文件夹，需要加-r参数<br> 如： git rm —f -r “文件夹名”</li>
</ol>
<h3 id="克隆一个项目下来">克隆一个项目下来</h3><pre><code>git clone git<span class="annotation">@github</span>.<span class="string">com:</span>username/Hello.git
</code></pre><p>（username：GitHub上的用户名，SmartScript：我在GitHub上创建的仓库repository名）</p>
<h3 id="忽略文件-gitignore">忽略文件.gitignore</h3><ol>
<li>进入要忽略的目录创建文件<br>touch  .gitignore     #创建gitignore隱藏文件</li>
<li>vim .gitignore     #编辑文件，加入指定文件 </li>
<li>git add . #就可以自动忽略掉指定的文件</li>
<li>文件.gitignore的格式规范：<br>A：#为注释<br>B：可以使用shell所使用的正则表达式来进行模式匹配<br>C：匹配模式最后跟”/“说明要忽略的是目录<br>D：使用！取反（例如目录中包含  test.a，并且gitignore文件中包含  <em>.[oa]，如果在文件中加入 ！test.a   表明忽略除test.a文件以外的后缀名为.a或者.o的文件）<br>tmp.txt         //忽略tmp.txt
</em>.log           //忽略所有log文件<br>tmp/<em>           //忽略tmp文件夹所有文件<br>log/**/</em>.log    //忽略log目录下的包括子目录下的所有log文件<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下面是我的gitignore文件的内容 </span></span><br><span class="line"><span class="comment">#忽略gitignore文件 </span></span><br><span class="line">.gitignore</span><br><span class="line"><span class="comment">#忽略后缀名为.o和.a的文件 </span></span><br><span class="line"><span class="keyword">*</span>.[oa]</span><br><span class="line"><span class="comment">#忽略后缀名为.exe和.txt的文件 </span></span><br><span class="line"><span class="keyword">*</span>.exe</span><br><span class="line"><span class="keyword">*</span>.txt</span><br><span class="line"><span class="comment">#显示指定忽略名称为main的文件 </span></span><br><span class="line">main</span><br><span class="line"></span><br><span class="line"><span class="comment"># eg:c++ .gitignore</span></span><br><span class="line"><span class="keyword">*</span>.sdf</span><br><span class="line">.gitignore</span><br><span class="line">Debug/<span class="keyword">*</span></span><br><span class="line">Release/<span class="keyword">*</span></span><br><span class="line">ipch/<span class="keyword">*</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="更新远程仓库代码到本地">更新远程仓库代码到本地</h3><ol>
<li>查看远程仓库<br> git remote -v</li>
<li>从远程获取最新版本到本地<br> git fetch origin master</li>
<li>比较本地的仓库和远程参考的区别 （作参考，可不用执行该步）<br> git log -p master..  origin/master</li>
<li>远程代码下载下来合并到本地仓库<br> git merge origin/master</li>
<li>git add –p (patch模式)<br> eg: 修改了a,b,c文件<br> git add -p    //列出所有更改<br> y/a 应用<br> git commit -m “..”<br> …</li>
</ol>
<h3 id="关于可能出现的错误">关于可能出现的错误</h3><ol>
<li><p>在执行</p>
<pre><code><span class="variable">$ </span>git remote addorigin git<span class="variable">@github</span>.<span class="symbol">com:</span>defnngj/hello-world.git
</code></pre><p> 错误提示：fatal: remote origin already exists.<br> 解决办法：</p>
<pre><code><span class="variable">$ </span>git remote rm origin
</code></pre><p> 然后在执行：$ git remote add origin git@github.com:defnngj/hello-world.git 就不会报错误了</p>
</li>
<li><p>在执行</p>
<pre><code>$ git <span class="keyword">push</span> origin master
</code></pre><p> 错误提示：error:failed to push som refs to…….<br> 解决办法：</p>
<pre><code>$ git pull origin master <span class="comment">// 先把远程服务器github上面的文件拉下来，再push 上去。</span>
</code></pre></li>
<li><p>遇到的问题:<br> update were rejected because the tip of your current branch is behind ….<br> 原因是远程的的代码库比我本地的代码库要新。<br> 所以需要在远程代码库pull一次下来。<br> 再修改代码。再push。</p>
</li>
<li><p>遇到遇到的问题:<br> change not staged for commit<br> 通过add 和 checkout解决不了</p>
<pre><code>git <span class="keyword">rm</span> --cached &lt;<span class="keyword">file</span>&gt; (git <span class="keyword">rm</span> --cached <span class="keyword">test</span>)
git add <span class="keyword">file</span> (git add <span class="keyword">test</span>/)
</code></pre></li>
</ol>
<h3 id="git命令速查表">git命令速查表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-4.png" alt="tool-editor"></p>
<h3 id="git详细命令表">git详细命令表</h3><p><img src="http://7xi9s3.com1.z0.glb.clouddn.com/git-conclusion-5.png" alt="tool-editor"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>windows下git使用总结<br>]]>
    
    </summary>
    
      <category term="git" scheme="http://qpanpony.github.io/tags/git/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo Hello World]]></title>
    <link href="http://qpanpony.github.io/2015/05/04/hello-world/"/>
    <id>http://qpanpony.github.io/2015/05/04/hello-world/</id>
    <published>2015-05-03T16:00:00.000Z</published>
    <updated>2015-05-11T02:43:41.348Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<a id="more"></a></p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://qpanpony.github.io/tags/Hexo/"/>
    
      <category term="技术参考" scheme="http://qpanpony.github.io/categories/%E6%8A%80%E6%9C%AF%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
</feed>